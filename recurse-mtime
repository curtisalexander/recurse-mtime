#!/usr/bin/env node

/**
 * Dependencies
 */

var fs = require('fs');
var path = require('path');

/**
 * Options
 */

startDir = process.argv[2];

/**
 * Define functions
 */

// recursive search a la *nix find

function find(startDir, cb) {
  var uniqueYYMM = [];
  var fileCnt = 1;
  var asyncRunning = 0;

  function dirOrFile (dirFile) {
    // async function
    fs.stat(dirFile, function(err, stats) {
      if (err) throw err;
      // if directory, call find again on all files within the directory
      if (stats.isDirectory()) {
        fileCnt--;
        asyncRunning++;
        // another async function
        fs.readdir(dirFile, function(err, files) {
          asyncRunning--;
          if (err) throw err;
          fileCnt += files.length;
          for(var i = 0; i < files.length; i++) {
            dirOrFile(path.join(dirFile, files[i])); // recurse
          }
        });
      } else if (stats.isFile()) {
        fileCnt--;
        year = stats['mtime'].getFullYear().toString();
        month = ('0' + (stats['mtime'].getMonth()+1)).slice(-2);
        yymm = year + '-' + month;

        console.log('file: ' + dirFile);
        console.log('year: ' + year); 
        console.log('month: ' + month);
        console.log();

        // if value of year does not exist for the key 'year'
        var yearIndex = -1;
        for (var j = 0; j < uniqueYYMM.length; j++) {
          if (uniqueYYMM[j]['year'] === year) {
            yearIndex = j;
            break;
          }
        }
        // if the year already exists
        if (yearIndex !== -1) {
          // if value of month does not exist for the key 'months'
          var monthIndex = -1;
          for (var k = 0; k < uniqueYYMM[yearIndex]['months'].length; k++) {
            if (uniqueYYMM[yearIndex]['months'][k] === month) {
              monthIndex = k;
              break;
            }
          } 
          if (monthIndex === -1) {
            uniqueYYMM[yearIndex]['months'].push(month);
          }
        } else {
          uniqueYYMM.push({'year': year, 'months': [month]});
        }

      } else {
        fileCnt--;
      }
      if (fileCnt === 0 && asyncRunning === 0) {
        // sort
        uniqueYYMM.sort();
        for (var l = 0; l < uniqueYYMM.length; l++) {
          uniqueYYMM[l]['months'].sort();
        }
        cb(uniqueYYMM);
      }
    });
  }
  dirOrFile(startDir);
}

function printUniques(arr, label) {
  console.log('Unique ' + label + '...');
  for (var i = 0; i < arr.length; i++) {
    console.log(arr[i]);
  }
  console.log();
}

function uniques(uniqueYYMM) {
  printUniques(uniqueYYMM, 'YYMM');
}

find(startDir, uniques);
